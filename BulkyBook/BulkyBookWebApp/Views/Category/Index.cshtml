
<!-- in order to access what was passed into View(), you need this model statement -->
<!-- you need to write the data type of whatever you passed into View(), in this case, we passed in a List -->
@model List<Category>

@{
    ViewData["Title"] = "Index";
}

<!-- All this is bootstrap classes as well -->
<div class="container p-3">

    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-primary">Category List</h2>
        </div>

        <div class="col-6 text-end">
            <!-- Here we are creating a button that will add a category, so this will INSERT into the SQL database -->
            <!-- asp-controller points to the relevant controller -->
            <!-- asp-controller tells what action we will do -->
            <a asp-controller="Category" asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Create New Category
            </a>
        </div>
    </div>
    <br />
    <br />

    <!-- All this table, thead, tbody, tr, th stuff is bootstrap html that's all -->
    <table class="table table-bordered table-striped" style="width:100%">

        <thead>
            <tr>
                <th>
                    Category Name
                </th>

                <th>
                    Display Order
                </th>
            </tr>
        </thead>

        <tbody>
            <!-- a cshtml file is a mix of c# and html, we can actually use a c# foreach loop right here in the html and loop through the list we got from View() -->
            <!-- each entree in the CategoryList is an object, and on that object, the columns are properties we can access -->
            @foreach(var obj in Model)
            {
                <tr>
                    <td width="50%">
                        @obj.Name
                    </td>

                    <td width="50%">
                        @obj.DisplayOrder
                    </td>
                </tr>
            }
        </tbody>

    </table>

</div>
