<!-- we can use model not just to access the arguments that were passed into View(), but we can also access Models -->
@model Category


<!-- here we will create a form that will POST the form data to the backend server, the backend server will then interact with the SQL database to INSERT that new category row -->
<form method="POST">
    <div class="border p-3 mt-4">

        <div class="row pb-2">
            <h2 class="text-primary">Create Category</h2>
            <hr />
        </div>

        <!-- for Name -->
        <div class="mb-3">
            <!-- asp-for just lets you access the properties of the model, and puts it as the innerHTML of the element -->
            <label asp-for="Name"></label>

            <!-- because of asp-for used in this input, when this form is posted, it will know that this input is for the Name property -->
            <input asp-for="Name" class="form-control"/>
        </div>

        <!-- for DisplayOrder -->
        <div class="mb-3">
            <!-- asp-for just lets you access the properties of the model, and puts it as the innerHTML of the element -->
            <label asp-for="DisplayOrder"></label>

            <!-- because of asp-for used in this input, when this form is posted, it will know that this input is for the Name property -->
            <input asp-for="DisplayOrder" class="form-control"/>
        </div>

        <!-- submit button and back button that takes you back to /Category/Index -->
        <div>
            <button type="submit" class="btn btn-primary" style="width:150px">Create</button>

            <!-- just by specifying asp-controller and asp-action, it knows to take the user to /Category/Index -->
            <a asp-controller="Category" asp-action="Index" class="btn btn-secondary" style="width:150px">Back to List</a>
        </div>

    </div>
</form>